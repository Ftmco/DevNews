{"version":3,"sources":["webpack:///../../../src/components/VGrid/VRow.ts","webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///../../../src/components/VLabel/VLabel.ts","webpack:///../../../src/components/VLabel/index.ts","webpack:///../../../src/components/VMessages/VMessages.ts","webpack:///../../../src/components/VMessages/index.ts","webpack:///../../../src/mixins/validatable/index.ts","webpack:///../../../src/components/VInput/VInput.ts","webpack:///../../../src/components/VInput/index.ts","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts"],"names":["breakpoints","ALIGNMENT","makeProps","props","prefix","def","alignValidator","str","alignProps","type","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","breakpointClass","className","val","breakpoint","prop","cache","name","functional","tag","dense","noGutters","render","children","cacheKey","String","classList","value","h","data","staticClass","class","module","exports","is","x","y","$","target","stat","mixins","absolute","color","disabled","focused","for","left","Number","right","Boolean","ctx","attrs","on","style","position","ref","methods","genChildren","this","$createElement","map","genMessage","key","message","setTextColor","themeClasses","baseMixins","error","errorCount","errorMessages","messages","readonly","rules","success","successMessages","validateOnBlur","required","errorBucket","hasColor","hasFocused","hasInput","isFocused","isResetting","lazyValue","valid","computed","computedColor","isDark","hasError","internalErrorMessages","length","hasSuccess","internalSuccessMessages","externalError","hasMessages","validationTarget","hasState","shouldValidate","genInternalMessages","internalMessages","internalValue","get","set","isDisabled","form","isInteractive","isReadonly","validations","slice","validationState","watch","handler","newVal","deep","$nextTick","setTimeout","beforeMount","created","register","beforeDestroy","unregister","Array","reset","resetValidation","validate","force","index","rule","console","inheritAttrs","appendIcon","backgroundColor","height","hideDetails","hideSpinButtons","hint","id","label","loading","persistentHint","prependIcon","hasMouseDown","classes","computedId","hasDetails","messagesToDisplay","hasHint","hasLabel","$slots","isDirty","isLabelActive","validation","validationResult","showDetails","beforeCreate","$options","model","genContent","genControl","title","attrs$","genDefaultSlot","genIcon","extraData","icon","eventName","hasListener","listeners$","mergeData","dark","light","click","e","cb","mouseup","undefined","genInputSlot","setBackgroundColor","mousedown","onMouseUp","genLabel","genMessages","role","scopedSlots","genSlot","slot","genPrependSlot","genAppendSlot","onClick","onMouseDown","max","parseInt","content","isGreater","isIntersecting","mounted","onObserve","destroyed","i","options","callback","onVisible","dirtyTypes","directives","resize","ripple","appendOuterIcon","autofocus","clearable","clearIcon","counter","counterValue","filled","flat","fullWidth","outlined","placeholder","prependInnerIcon","persistentPlaceholder","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computedCounterValue","hasCounter","isEnclosed","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","showLabel","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","window","clearableCallback","$refs","input","genPrependInnerSlot","genIconSlot","prepend","genClearIcon","genCounter","genFieldset","genLegend","width","span","domProps","innerHTML","genInput","listeners","inputAttrs","keydown","onKeyDown","modifiers","quiet","onResize","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","onFocus","root","$emit","onInput","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","document","updateValue"],"mappings":"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","file":"js/chunk-ba4106a0.9fcf7c0c.js","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.es/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","// Styles\nimport './VLabel.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-label',\n\n  functional: true,\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    focused: Boolean,\n    for: String,\n    left: {\n      type: [Number, String],\n      default: 0,\n    },\n    right: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    value: Boolean,\n  },\n\n  render (h, ctx): VNode {\n    const { children, listeners, props } = ctx\n    const data = {\n      staticClass: 'v-label',\n      class: {\n        'v-label--active': props.value,\n        'v-label--is-disabled': props.disabled,\n        ...functionalThemeClasses(ctx),\n      },\n      attrs: {\n        for: props.for,\n        'aria-hidden': !props.for,\n      },\n      on: listeners,\n      style: {\n        left: convertToUnit(props.left),\n        right: convertToUnit(props.right),\n        position: props.absolute ? 'absolute' : 'relative',\n      },\n      ref: 'label',\n    }\n\n    return h('label', Colorable.options.methods.setTextColor(props.focused && props.color, data), children)\n  },\n})\n","import VLabel from './VLabel'\n\nexport { VLabel }\nexport default VLabel\n","// Styles\nimport './VMessages.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-messages',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n  },\n\n  methods: {\n    genChildren () {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div',\n        },\n      }, this.value.map(this.genMessage))\n    },\n    genMessage (message: string, key: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key,\n      }, getSlot(this, 'default', { message, key }) || [message])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses,\n    }), [this.genChildren()])\n  },\n})\n","import VMessages from './VMessages'\n\nexport { VMessages }\nexport default VMessages\n","// Mixins\nimport Colorable from '../colorable'\nimport Themeable from '../themeable'\nimport { inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { deepEqual } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\nimport { InputMessage, InputValidationRules } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'form', any>('form'),\n  Themeable,\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'validatable',\n\n  props: {\n    disabled: Boolean,\n    error: Boolean,\n    errorCount: {\n      type: [Number, String],\n      default: 1,\n    },\n    errorMessages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    messages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    readonly: Boolean,\n    rules: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<InputValidationRules>,\n    success: Boolean,\n    successMessages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    validateOnBlur: Boolean,\n    value: { required: false },\n  },\n\n  data () {\n    return {\n      errorBucket: [] as string[],\n      hasColor: false,\n      hasFocused: false,\n      hasInput: false,\n      isFocused: false,\n      isResetting: false,\n      lazyValue: this.value,\n      valid: false,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (this.isDisabled) return undefined\n      if (this.color) return this.color\n      // It's assumed that if the input is on a\n      // dark background, the user will want to\n      // have a white color. If the entire app\n      // is setup to be dark, then they will\n      // like want to use their primary color\n      if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n    hasError (): boolean {\n      return (\n        this.internalErrorMessages.length > 0 ||\n        this.errorBucket.length > 0 ||\n        this.error\n      )\n    },\n    // TODO: Add logic that allows the user to enable based\n    // upon a good validation\n    hasSuccess (): boolean {\n      return (\n        this.internalSuccessMessages.length > 0 ||\n        this.success\n      )\n    },\n    externalError (): boolean {\n      return this.internalErrorMessages.length > 0 || this.error\n    },\n    hasMessages (): boolean {\n      return this.validationTarget.length > 0\n    },\n    hasState (): boolean {\n      if (this.isDisabled) return false\n\n      return (\n        this.hasSuccess ||\n        (this.shouldValidate && this.hasError)\n      )\n    },\n    internalErrorMessages (): InputValidationRules {\n      return this.genInternalMessages(this.errorMessages)\n    },\n    internalMessages (): InputValidationRules {\n      return this.genInternalMessages(this.messages)\n    },\n    internalSuccessMessages (): InputValidationRules {\n      return this.genInternalMessages(this.successMessages)\n    },\n    internalValue: {\n      get (): unknown {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n\n        this.$emit('input', val)\n      },\n    },\n    isDisabled (): boolean {\n      return this.disabled || (\n        !!this.form &&\n        this.form.disabled\n      )\n    },\n    isInteractive (): boolean {\n      return !this.isDisabled && !this.isReadonly\n    },\n    isReadonly (): boolean {\n      return this.readonly || (\n        !!this.form &&\n        this.form.readonly\n      )\n    },\n    shouldValidate (): boolean {\n      if (this.externalError) return true\n      if (this.isResetting) return false\n\n      return this.validateOnBlur\n        ? this.hasFocused && !this.isFocused\n        : (this.hasInput || this.hasFocused)\n    },\n    validations (): InputValidationRules {\n      return this.validationTarget.slice(0, Number(this.errorCount))\n    },\n    validationState (): string | undefined {\n      if (this.isDisabled) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor) return this.computedColor\n      return undefined\n    },\n    validationTarget (): InputValidationRules {\n      if (this.internalErrorMessages.length > 0) {\n        return this.internalErrorMessages\n      } else if (this.successMessages && this.successMessages.length > 0) {\n        return this.internalSuccessMessages\n      } else if (this.messages && this.messages.length > 0) {\n        return this.internalMessages\n      } else if (this.shouldValidate) {\n        return this.errorBucket\n      } else return []\n    },\n  },\n\n  watch: {\n    rules: {\n      handler (newVal, oldVal) {\n        if (deepEqual(newVal, oldVal)) return\n        this.validate()\n      },\n      deep: true,\n    },\n    internalValue () {\n      // If it's the first time we're setting input,\n      // mark it with hasInput\n      this.hasInput = true\n      this.validateOnBlur || this.$nextTick(this.validate)\n    },\n    isFocused (val) {\n      // Should not check validation\n      // if disabled\n      if (\n        !val &&\n        !this.isDisabled\n      ) {\n        this.hasFocused = true\n        this.validateOnBlur && this.$nextTick(this.validate)\n      }\n    },\n    isResetting () {\n      setTimeout(() => {\n        this.hasInput = false\n        this.hasFocused = false\n        this.isResetting = false\n        this.validate()\n      }, 0)\n    },\n    hasError (val) {\n      if (this.shouldValidate) {\n        this.$emit('update:error', val)\n      }\n    },\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeMount () {\n    this.validate()\n  },\n\n  created () {\n    this.form && this.form.register(this)\n  },\n\n  beforeDestroy () {\n    this.form && this.form.unregister(this)\n  },\n\n  methods: {\n    genInternalMessages (messages: InputMessage | null): InputValidationRules {\n      if (!messages) return []\n      else if (Array.isArray(messages)) return messages\n      else return [messages]\n    },\n    /** @public */\n    reset () {\n      this.isResetting = true\n      this.internalValue = Array.isArray(this.internalValue)\n        ? []\n        : null\n    },\n    /** @public */\n    resetValidation () {\n      this.isResetting = true\n    },\n    /** @public */\n    validate (force = false, value?: any): boolean {\n      const errorBucket = []\n      value = value || this.internalValue\n\n      if (force) this.hasInput = this.hasFocused = true\n\n      for (let index = 0; index < this.rules.length; index++) {\n        const rule = this.rules[index]\n        const valid = typeof rule === 'function' ? rule(value) : rule\n\n        if (valid === false || typeof valid === 'string') {\n          errorBucket.push(valid || '')\n        } else if (typeof valid !== 'boolean') {\n          consoleError(`Rules should return a string or boolean, received '${typeof valid}' instead`, this)\n        }\n      }\n\n      this.errorBucket = errorBucket\n      this.valid = errorBucket.length === 0\n\n      return this.valid\n    },\n  },\n})\n","// Styles\nimport './VInput.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VLabel from '../VLabel'\nimport VMessages from '../VMessages'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Validatable from '../../mixins/validatable'\n\n// Utilities\nimport {\n  convertToUnit,\n  getSlot,\n  kebabCase,\n} from '../../util/helpers'\nimport mergeData from '../../util/mergeData'\n\n// Types\nimport { VNode, VNodeData, PropType } from 'vue'\nimport mixins from '../../util/mixins'\nimport { InputValidationRule } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Validatable,\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  /* eslint-disable-next-line camelcase */\n  $_modelEvent: string\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-input',\n\n  inheritAttrs: false,\n\n  props: {\n    appendIcon: String,\n    backgroundColor: {\n      type: String,\n      default: '',\n    },\n    dense: Boolean,\n    height: [Number, String],\n    hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n    hideSpinButtons: Boolean,\n    hint: String,\n    id: String,\n    label: String,\n    loading: Boolean,\n    persistentHint: Boolean,\n    prependIcon: String,\n    value: null as any as PropType<any>,\n  },\n\n  data () {\n    return {\n      lazyValue: this.value,\n      hasMouseDown: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-input--has-state': this.hasState,\n        'v-input--hide-details': !this.showDetails,\n        'v-input--is-label-active': this.isLabelActive,\n        'v-input--is-dirty': this.isDirty,\n        'v-input--is-disabled': this.isDisabled,\n        'v-input--is-focused': this.isFocused,\n        // <v-switch loading>.loading === '' so we can't just cast to boolean\n        'v-input--is-loading': this.loading !== false && this.loading != null,\n        'v-input--is-readonly': this.isReadonly,\n        'v-input--dense': this.dense,\n        'v-input--hide-spin-buttons': this.hideSpinButtons,\n        ...this.themeClasses,\n      }\n    },\n    computedId (): string {\n      return this.id || `input-${this._uid}`\n    },\n    hasDetails (): boolean {\n      return this.messagesToDisplay.length > 0\n    },\n    hasHint (): boolean {\n      return !this.hasMessages &&\n        !!this.hint &&\n        (this.persistentHint || this.isFocused)\n    },\n    hasLabel (): boolean {\n      return !!(this.$slots.label || this.label)\n    },\n    // Proxy for `lazyValue`\n    // This allows an input\n    // to function without\n    // a provided model\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit(this.$_modelEvent, val)\n      },\n    },\n    isDirty (): boolean {\n      return !!this.lazyValue\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    messagesToDisplay (): string[] {\n      if (this.hasHint) return [this.hint]\n\n      if (!this.hasMessages) return []\n\n      return this.validations.map((validation: string | InputValidationRule) => {\n        if (typeof validation === 'string') return validation\n\n        const validationResult = validation(this.internalValue)\n\n        return typeof validationResult === 'string' ? validationResult : ''\n      }).filter(message => message !== '')\n    },\n    showDetails (): boolean {\n      return this.hideDetails === false || (this.hideDetails === 'auto' && this.hasDetails)\n    },\n  },\n\n  watch: {\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeCreate () {\n    // v-radio-group needs to emit a different event\n    // https://github.com/vuetifyjs/vuetify/issues/4752\n    this.$_modelEvent = (this.$options.model && this.$options.model.event) || 'input'\n  },\n\n  methods: {\n    genContent () {\n      return [\n        this.genPrependSlot(),\n        this.genControl(),\n        this.genAppendSlot(),\n      ]\n    },\n    genControl () {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control',\n        attrs: { title: this.attrs$.title },\n      }, [\n        this.genInputSlot(),\n        this.genMessages(),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genLabel(),\n        this.$slots.default,\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData: VNodeData = {}\n    ) {\n      const icon = (this as any)[`${type}Icon`]\n      const eventName = `click:${kebabCase(type)}`\n      const hasListener = !!(this.listeners$[eventName] || cb)\n\n      const data = mergeData({\n        attrs: {\n          'aria-label': hasListener ? kebabCase(type).split('-')[0] + ' icon' : undefined,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          light: this.light,\n        },\n        on: !hasListener\n          ? undefined\n          : {\n            click: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n\n              this.$emit(eventName, e)\n              cb && cb(e)\n            },\n            // Container has g event that will\n            // trigger menu open if enclosed\n            mouseup: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n            },\n          },\n      }, extraData)\n\n      return this.$createElement('div', {\n        staticClass: `v-input__icon`,\n        class: type ? `v-input__icon--${kebabCase(type)}` : undefined,\n      }, [\n        this.$createElement(\n          VIcon,\n          data,\n          icon\n        ),\n      ])\n    },\n    genInputSlot () {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: { height: convertToUnit(this.height) },\n        on: {\n          click: this.onClick,\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp,\n        },\n        ref: 'input-slot',\n      }), [this.genDefaultSlot()])\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: this.hasState,\n          for: this.computedId,\n          light: this.light,\n        },\n      }, this.$slots.label || this.label)\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      return this.$createElement(VMessages, {\n        props: {\n          color: this.hasHint ? '' : this.validationState,\n          dark: this.dark,\n          light: this.light,\n          value: this.messagesToDisplay,\n        },\n        attrs: {\n          role: this.hasMessages ? 'alert' : null,\n        },\n        scopedSlots: {\n          default: props => getSlot(this, 'message', props),\n        },\n      })\n    },\n    genSlot (\n      type: string,\n      location: string,\n      slot: (VNode | VNode[])[]\n    ) {\n      if (!slot.length) return null\n\n      const ref = `${type}-${location}`\n\n      return this.$createElement('div', {\n        staticClass: `v-input__${ref}`,\n        ref,\n      }, slot)\n    },\n    genPrependSlot () {\n      const slot = []\n\n      if (this.$slots.prepend) {\n        slot.push(this.$slots.prepend)\n      } else if (this.prependIcon) {\n        slot.push(this.genIcon('prepend'))\n      }\n\n      return this.genSlot('prepend', 'outer', slot)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      // Append icon for text field was really\n      // an appended inner icon, v-text-field\n      // will overwrite this method in order to obtain\n      // backwards compat\n      if (this.$slots.append) {\n        slot.push(this.$slots.append)\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    onClick (e: Event) {\n      this.$emit('click', e)\n    },\n    onMouseDown (e: Event) {\n      this.hasMouseDown = true\n      this.$emit('mousedown', e)\n    },\n    onMouseUp (e: Event) {\n      this.hasMouseDown = false\n      this.$emit('mouseup', e)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.validationState, {\n      staticClass: 'v-input',\n      class: this.classes,\n    }), this.genContent())\n  },\n})\n","import VInput from './VInput'\n\nexport { VInput }\nexport default VInput\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  return Vue.extend({\n    name: 'intersectable',\n\n    data: () => ({\n      isIntersecting: false,\n    }),\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        this.isIntersecting = isIntersecting\n\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { attachedRoot } from '../../util/dom'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    persistentPlaceholder: Boolean,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive || this.persistentPlaceholder\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n    this.autofocus && this.tryAutofocus()\n    requestAnimationFrame(() => {\n      this.isBooted = true\n      requestAnimationFrame(() => {\n        if (!this.isIntersecting) {\n          this.onResize()\n        }\n      })\n    })\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      // if the text field has no content then don't display the clear icon.\n      // We add an empty div because other controls depend on a ref to append inner\n      if (!this.isDirty) {\n        return this.genSlot('append', 'inner', [\n          this.$createElement('div'),\n        ])\n      }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n        staticClass: 'notranslate',\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n      const { title, ...inputAttrs } = this.attrs$\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...inputAttrs,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.persistentPlaceholder || this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      const root = attachedRoot(this.$el)\n      if (!root) return\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (\n        e.keyCode === keyCodes.enter &&\n        this.lazyValue !== this.initialValue\n      ) {\n        this.initialValue = this.lazyValue\n        this.$emit('change', this.initialValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input) return false\n\n      const root = attachedRoot(this.$el)\n      if (!root || root.activeElement === this.$refs.input) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n"],"sourceRoot":""}